$primary: #f2e4d1;
$secondary: #cfd6ce;
$success: #b9f2d1;
$info: #b9d4f2;
$warning: #f2ddb9;
$danger: #f2c6b9;
$light: #ffffff;
$dark: #807563;

@import "../lib/bootstrap/scss/bootstrap";
@import "../lib/bootstrap//scss/_functions.scss";
@import "../lib/bootstrap//scss/_variables.scss";
@import "../lib/bootstrap//scss/_mixins.scss";
@import "../lib/bootstrap/scss//_utilities.scss";
@import url('https://fonts.googleapis.com/css2?family=Merriweather&family=Roboto&display=swap');


/*.custom-container {
    width: 100%;
    padding-right: $grid-gutter-width * 0.5;
    padding-left: $grid-gutter-width * 0.5;
    margin-right: auto;
    margin-left: auto;

    @include media-breakpoint-up(sm) {
        max-width: $grid-breakpoints[sm];
    }

    @include media-breakpoint-up(md) {
        max-width: $grid-breakpoints[md];
    }

    @include media-breakpoint-up(lg) {
        max-width: $grid-breakpoints[lg];
    }

    @include media-breakpoint-up(xl) {
        max-width: $grid-breakpoints[xl];
    }

    @include media-breakpoint-up(xxl) {
        max-width: $grid-breakpoints[xxl];
    }
}
*/

$utilities: map-merge(
  $utilities, (
    "border": map-merge(
      map-get($utilities, "border"),
      ( responsive: true ),
    ),
  )
);

.extended-padding-right {
    position: relative;
    // This pseudo-element will create the effect of extended padding.
    &:after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        right: -100vw; // start from the right edge of the column
        width: calc(100vw - 50%); // viewport width minus half for the column
        background-color: inherit; // so it matches the column's background
        z-index: -1; // to ensure it's behind the content
    }
}








/*.btn:focus, .btn:active:focus, .btn-link.nav-link:focus, .form-control:focus, .form-check-input:focus {
  box-shadow: 0 0 0 0.1rem white, 0 0 0 0.25rem #258cfb;
}
*/

.navbar-toggler {
    border: none;
}

.nav-link:hover, .nav-link.dropdown:hover {
    color: black;
}

html {
    font-size: 18px;
    position: relative;
    min-height: 100%;
}

body {
    font-family: 'Roboto', sans-serif;
}

h1 {
    font-family: 'Merriweather', serif;
}

h2 {
    font-family: 'Merriweather', serif;
    font-size: 3rem;
}

h3 {
    font-family: 'Merriweather', serif;
}

h4 {
    font-family: 'Merriweather', serif;
    padding-bottom: 15px;
}


@media (min-width: 576px) {
    .text-container {
        max-width: 75%; /* Adjust this value to fit your design preferences */
        margin: 0 auto; /* Center the container within the column */
    }
}

@media (min-width: 992px) {
    .text-container {
        max-width: 50%; /* Adjust this value to fit your design preferences */
        margin: 0 auto; /* Center the container within the column */
    }
}


@media (min-width: 1400px) {
    .text-container {
        max-width: 75%; /* Adjust this value to fit your design preferences */
        margin: 0 auto; /* Center the container within the column */
    }
}



@media (min-width: 2000px) {
    .text-container-50 {
        max-width: 50%; /* Adjust this value to fit your design preferences */
        margin: 0 auto; /* Center the container within the column */
    }
}

@media (min-width: 576px) {
    .text-container-75 {
        max-width: 75%; /* Adjust this value to fit your design preferences */
        margin: 0 auto; /* Center the container within the column */
    }
}

.nav-item {
    padding-right: 8px;
    padding-left: 8px;
}

.hero-image {
    display: flex;
    width: 100%;
    height: 55vh;
    flex-direction: column;
    background-image: url("../images/stones-3184610_1920-960.jpg");
    align-self: center;
    background-repeat: no-repeat;
    background-size: cover;
    position: relative;
    background-attachment: fixed;
    align-items: center;
    justify-content: center;
}

.no-padding {
    padding-left: 0;
    padding-right: 0;
}

.subtext {
    font-size: 1.4rem;
    text-align: center;
    color: white;
}

.hero-section {
    padding-top: 80px;
    padding-bottom: 80px;
    height: 30vh;
}

.hero-section.big {
    height: 50vh;
}

.section-title {
    padding-bottom: 40px;
}

.hero-section-title {
    padding-bottom: 10px;
}

.bottom-border-input {
    border: none; // Remove all borders
    background-color: transparent !important;
    border-bottom: 1px solid #ccc; // Add a bottom border

    &:focus {
        border-color: transparent; // Make left, top, and right borders transparent on focus
        border-bottom: 1px solid #007bff; // Add focus color to bottom border
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); // Optional: Add Bootstrap's focus shadow
    }
}

/*.transparent-container {
background-color: transparent; // Make the container background transparent

.transparent-input {
    background-color: transparent !important; // Make the input field background transparent

    &:focus {
        background-color: transparent !important; // Keep the background transparent when focused
        box-shadow: none !important; // Remove the default Bootstrap box shadow on focus
    }
}
}
*/

.transparent-container {
    background-color: transparent; // Make the container background transparent

    .form-control {
        background-color: transparent !important; // Make the input field background transparent

        &:focus {
            background-color: transparent !important; // Keep the background transparent when focused
            box-shadow: none !important; // Remove the default Bootstrap box shadow on focus
        }
    }
}

.no-border-outline {
    border: none;
    outline: none;
    box-shadow: none; /* You might also want to remove the box-shadow if Bootstrap is applying one */
}

.box-up-input {
    border: 2px solid transparent;
    border-bottom: 1px solid #000; // Add a bottom border
    border-radius: 0;
    width: 90%; // Set initial width
    transition: border-color 1s ease, width 1s ease; // Smooth transition for the border effect and width

    &:hover {
        border-bottom: 2px solid #000; // Increase bottom border thickness on hover
        transition: border-bottom 0.1s ease; // Smooth transition for the border effect and width
    }

    &:focus {
        border-color: black; // Increase bottom border thickness on focus
        border-bottom: 2px solid #000; // Add a bottom border
        width: 100%; // Increase width on focus
        transition: border-color 1s ease, border-bottom 1s ease, width 1s ease; // Smooth transition for the border effect and width
    }
}

/*.thicken-bottom-border {

}
*/
.transparent-input {
    background-color: transparent; // Make background transparent
    border: none; // Remove all borders
    border-bottom: 1px solid #000; // Add a bottom border
    border-radius: 0;
    outline: none; // Remove the default outline (border) that appears on focus
    transition: border-bottom 0.1s ease, width 0.3s ease; // Smooth transition for the border effect and width
    display: block; // Allow width manipulation
    width: 80%; // Set initial width

    &:hover {
        background-color: transparent;
        border-bottom: 2px solid #000; // Increase bottom border thickness on hover
    }

    &:focus {
        background-color: transparent;
        border-bottom: 2px solid #000; // Increase bottom border thickness on focus
        width: 100%; // Increase width on focus
    }
}

.bordered-textarea {
    border: 1px solid #000;
    border-radius: 0;
    transition: border 0.1s ease; // Smooth transition for the border effect and width
    display: block; // Allow width manipulation
    width: 100%; // Set initial width

    &:hover, &:focus {
        border: 2px solid #000; // Increase bottom border thickness on hover
    }
}

.custom-textarea {
    min-height: 100px; // Adjust based on your preference
    resize: vertical; // Allow only vertical resizing
    padding-top: 1.5rem; // Space for the floating label, adjust as needed

    &:focus {
        // You may need to adjust the padding when the textarea is in focus
        padding-top: 1.5rem; // Same as normal state
    }
}

/*#About:before {
margin-top: -180px;*/ /* Adjust this value to the height of your navbar */
/*padding-top: 180px;*/ /* Same value as the negative margin-top */
/*}*/


/*@media (min-width: 768px) {
.navbar-collapse.collapse {
flex-basis: auto !important;
max-width: 350px;
justify-content: flex-start !important;
}
}
*/